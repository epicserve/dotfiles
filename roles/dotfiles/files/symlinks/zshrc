# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# Theme repository: https://github.com/denysdovhan/spaceship-prompt
export ZSH_THEME="spaceship"
export SPACESHIP_PACKAGE_SHOW=false
export SPACESHIP_NODE_SHOW=false

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want disable red dots displayed while waiting for completion
# DISABLE_COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
  aws
  brew
  django
  docker
  docker-compose
  fabric
  git
  git-extras
  heroku
  npm
  pip
  vagrant
)

# itermocil completion
compctl -g '~/.teamocil/*(:t:r)' itermocil

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/scripts:/usr/local/share/npm/bin:/usr/local/texbin:$PATH"

# Homebrew settings
export CFLAGS="-I$(brew --prefix openssl)/include -I$(brew --prefix zlib)/include -I$(brew --prefix sqlite3)/include"
export LDFLAGS="-L$(brew --prefix openssl)/lib -L$(brew --prefix zlib)/lib -L$(brew --prefix sqlite3)/lib"

# Set default editor
export EDITOR='atom'

# LOAD Virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
export PIP_REQUIRE_VIRTUALENV=true

# Z Settings
# To install Z run brew install z
. `brew --prefix`/etc/profile.d/z.sh
function precmd () {
    z --add "$(pwd -P)"
}

# Aliases
alias e=$EDITOR
alias gh=github
alias gx=gitx
alias gd='git diff'
alias duf='du -sk * | sort -n | perl -ne '\''($s,$f)=split(m{\t});for (qw(K M G)) {if($s<1024) {printf("%.1f",$s);print "$_\t$f"; last};$s=$s/1024}'\'
alias gdl='git log --pretty=oneline --abbrev-commit --since="6am" | perl -wpe "s/^([^\s]+)/-/g" | tail -r'
if [ -e ~/.ksu_vars ]; then
  source ~/.ksu_vars
fi
oeievpn () {
    echo $EID_PASSWORD | sudo openconnect --config=$HOME/.openconnect https://vpn.net.k-state.edu
}
killoeievpn () {
    ID=`ps -A | grep -m1 openconnect | awk '{print $1}' | xargs` && sudo kill -s SIGINT $ID
}

# Python Aliases
alias wn=workon
alias wnv='workon ww_videos'
alias mkvirtualenv='mkvirtualenv --distribute'
alias rmpyc='find . -name "*.pyc" -delete'

# run this if iterm2 is slow
alias itermspeed="sudo rm /private/var/log/asl/*.asl"

# Django Aliases
alias d=./manage.py
alias dt='./manage.py test'
alias dtf='dt --failfast'
alias dsa='d startapp --template=https://github.com/epicserve/django-app-template/archive/master.zip'
alias dsp='d startproject --template=https://github.com/epicserve/django-base-site/archive/master.zip'
alias dsma='d makemigrations'
alias dm='d migrate'
alias fs='foreman start'

# Docker Clean Containers - Removes all stopped containers
alias dcc='docker rm $(docker ps -a -q)'

# Docker Clean Images - Remove the <none> images
alias dci='docker rmi $(docker images -a | grep "^<none>" | awk '\''{if (NR!=1) {print $3}}'\'')'

# Docker kill all running containers
alias dka='docker kill $(docker ps | awk '\''{if (NR!=1) {print $1}}'\'')'

# Daemon Aliases
REDIS_VERSION=`redis-cli --version | cut -c 11-`
alias rst="launchctl load /usr/local/Cellar/redis/$REDIS_VERSION/homebrew.mxcl.redis.plist"
alias rsp="launchctl unload /usr/local/Cellar/redis/$REDIS_VERSION/homebrew.mxcl.redis.plist"

# shortcut for starting django's runserver on a different port
# usage: drs 3
drs () {
    if [[ -n "$*" ]]; then
        d runserver 127.0.0.1:"$*"000
    else
        d runserver 127.0.0.1:8000
    fi
}

cdvsrc() {
    cd "$VIRTUAL_ENV/src"
}

# Postgres
alias pgst="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"
alias pgsp="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
alias pgps="ps -u postgres -o pid,rss,command"
function pgmemtotal() {
        ps -u postgres -o pid,rss,command | awk '{total+=$2}END{printf("%d MB\n", total/1024)}'
}

# MySQL
alias mst="/usr/local/bin/mysql.server start"
alias msp="/usr/local/bin/mysql.server stop"

# PHP Aliases
alias prs="php -S localhost:8000"
alias ep="pstorm"

# A simple server for static html files
function server() {
    local port="${1:-8000}"
    open "http://localhost:${port}/"
    python -m SimpleHTTPServer "$port"
}

# ec2-api-tools
export JAVA_HOME="$(/usr/libexec/java_home)"
# export EC2_PRIVATE_KEY="$(/bin/ls "$HOME"/.ec2/pk-*.pem | /usr/bin/head -1)"
# export EC2_CERT="$(/bin/ls "$HOME"/.ec2/cert-*.pem | /usr/bin/head -1)"
export EC2_HOME="/usr/local/Library/LinkedKegs/ec2-api-tools/jars"

# Ruby
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
if [ -e $HOME/.rvm/scripts/rvm ]; then
  source $HOME/.rvm/scripts/rvm
fi

PATH="$PATH:$HOME/.composer/vendor/bin"

# SETUP Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
pyenv virtualenvwrapper_lazy

# Add The Pipsi bin dir to the path ~/.local/bin
export PATH="$HOME/.local/bin:$PATH"

# SSH, This makes it so you don't have to type your ssh private key passphrase after a reboot
ssh-add -K ~/.ssh/id_rsa &> /dev/null

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# initialize direnv
eval "$(direnv hook zsh)"
